@*@model IEnumerable<Rate_A_Cop.Models.Review>*@
@model PagedList.IPagedList<Rate_A_Cop.Models.Review>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<div class="reviews-index container">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

        <p>
            <a href=@Url.Action("Create", "Reviews")><span class="btn btn-default btn-margin-top">Create New Review</span></a>
        </p>

    </div>
</div>

@*-------------------- Reviews Cards --------------------*@
    @foreach (var item in Model)
    {
        <div class="w3-card-4 w3-section w3-pale-blue w3-leftbar w3-rightbar w3-topbar w3-bottombar w3-border-grey w3-hover-border-red w3-section w3-border w3-round-xlarge" style="width:70%; margin:auto;">

            @* -------------------- Display Anonymous or Display Username -------------------- *@
            <header class="w3-container w3-black">
                @if (item.IsAnonymous == true)
                {
                    <h4><span>Anonymous</span></h4>
                }
                else if (item.ApplicationUser == null)
                {
                    <h4><span>Unregistered User</span></h4>
                }
                else
                {
                    <h4><span>@Html.DisplayFor(modelItem => item.ApplicationUser.UserName)</span></h4>
                }
            </header>

            @* -------------------- Display date and time when the review was posted -------------------- *@
            <div class="w3-container time-stamp">

                <p class="card-time-stamp-p">@Html.DisplayFor(modelItem => item.ReviewDateTime)</p>
                <hr class="w3-border-bottom w3-border-black card-hr">

                @* -------------------- Display officer's name -------------------- *@
                <h5><strong>Officer: </strong><a class="officer-name-link" href="@Url.Action("Details", "Officers", new { id = item.Officer.OfficerID })">@Html.DisplayFor(modelItem => item.Officer.OfficerName)</a></h5>

                @* -------------------- Display officer's badge number -------------------- *@
                <h5><strong>Badge Number: </strong>@Html.DisplayFor(modelItem => item.Officer.BadgeNumber)</h5>

                @* -------------------- Display location (City) of the incident -------------------- *@
                <h5><strong>City: </strong>@Html.DisplayFor(modelItem => item.Location)</h5>

                @* -------------------- Display date and time of the incident -------------------- *@
                <h5><strong>Date & Time: </strong>@Html.DisplayFor(modelItem => item.ReviewTimeStamp)</h5>

                @* -------------------- Display thumbs up or thumbs down glyphicons -------------------- *@
                @if (item.ReviewType == 1)
                {
                    <img src="~/Images/thumbs-up-icon-blue-clip-art.png" alt="Thumbs-Up" class="w3-left w3-margin-right w3-margin-bottom" style="width:40px" />
                }
                else if (item.ReviewType == 2)
                {
                    <img src="~/Images/13476359851958638477thumbs-down-icon-red-hi-md.png" alt="Thumbs-Down" class="w3-left w3-margin-right w3-margin-bottom" style="width:40px" />
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.ReviewType)
                }

                @* -------------------- Display Text Review -------------------- *@
                <p>@Html.DisplayFor(modelItem => item.ReviewText)</p>
            </div>

            @* ---------------- Read More button. Takes user to details(reviewID) view --------------- *@
            <button class="btn btn-block"><a class="officer-name-link no-underline" href="@Url.Action("Details", "Reviews", new { id = item.ReviewID })"><h4 class="read-more">READ MORE</h4></a></button>

        </div>@*End Review Cards*@
    }

@*Page Navigation*@
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
